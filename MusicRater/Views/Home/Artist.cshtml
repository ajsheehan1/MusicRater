@model MusicRater.Models.ArtistCreate

@{
    ViewBag.Title = "Artist";
}

<h2>Artist</h2>


@using (Html.BeginForm())
{
    // @using (Html.BeginForm("Post", "api"))
    // @using (Html.BeginForm("Artist", "ArtistController"))
    // @using (Html.BeginForm("Artist", "ArtistController", new { artistid = 0 }, FormMethod.Post, null))
    //  @using (Html.BeginForm("Artist", "ArtistController", new { artistid = @Viewbag.Club.id }, FormMethod.Post, null))

    // MvcForm BeginForm(
    //      this HtmlHelper htmlHelper, 
    //      string actionName, 
    //      string controllerName, 
    //      FormMethod method, 
    //      object htmlAttributes);

    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ArtistCreate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ArtistName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ArtistName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ArtistName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ArtistRating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ArtistRating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ArtistRating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
